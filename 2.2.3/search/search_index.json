{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Before to start","text":"<ul> <li> <p>If you don't know anything about glacier processes, explore this great website. If you don't know anything about glacier evolution modeling, you may watch first this video, which gives some basics. </p> </li> <li> <p>OS: IGM was developed in a Linux environment but works on Windows and Mac. Windows user are strongly recommended to use WSL2 for using the GPU and the OGGM shop module. </p> </li> <li> <p>Disclaimer: IGM implements empirical physical laws, with an important amount of approximations (of any kind). Make sure to understand what you do, to explore key parameters, and interpret the results with care.</p> </li> </ul>"},{"location":"#how-to-start","title":"How to start","text":"<p>Running IGM consists of running a python script <code>igm_run</code>, which is made of functions of the IGM python package. This documentation will help you to understand the parameters and, set-up your model by listing the modules you need, customize your own modules for your application.</p> <ul> <li> <p>Then, install an igm python environment on your system and starting with examples.</p> </li> <li> <p>Then, learn how to run IGM with module list and parameter setting (without extra coding), and explore the module documentation.</p> </li> <li> <p>Last, understand the code and write your own module code. </p> </li> </ul>"},{"location":"Installation/","title":"Installation","text":"<p>IGM is a Python package, which works on any OS on </p> <ul> <li>CPU (not computationally efficient, but fine for small applications like individual glaciers),</li> <li>GPU (the most computationally efficient way, especially relevant for large-scale and high-resolution applications). </li> </ul> <p>IGM can be installed with the </p> <ul> <li>the main version for stable application (the latest available tag), not all modules,</li> <li>the development version to get the latest feature with all modules (at the possible price of unrevealed bugs). </li> </ul> <p>Both versions are now on the same (main) branch. IGM is rapidly changing, keep track of updates on the release page for the tagged versions or/and on this page for the development version.</p> <p>Note that the igm package installs most of dependent packages, but not all. For using some post-processing modules, the user has to install additional packages (e.g., mayavi, plotly, ect.).</p> <p>We first describe the installation in Linux (the preferred OS), and then on Windows and Mac.</p>"},{"location":"Installation/#linux","title":"Linux","text":""},{"location":"Installation/#windows","title":"Windows","text":""},{"location":"Installation/#mac","title":"Mac","text":""},{"location":"Installation/#troubleshooting","title":"Troubleshooting","text":"<p>Main source of issues are linked to Tensorflow and the use of GPU. Hopefully, the installation is significantly easier since tensorflow 2.14.0 since it can install all necessary GPU/cuda dependent packages with the right version automatically. Note that to ensure smooth usage of GPU with cuda and tensorflow libraries, one has to make sure that i) cuda ii) cudnn iii) tensorflow are compatible, and your Nvidia driver is compatible with the version of cuda. Such incompatibility is the most common source of issue. </p> <p>For instance, it is possible do install tensorflow-2.12.0 by setting <code>tensorflow==2.12.0</code> in the setup.py and</p> <pre><code>conda install -c conda-forge cudatoolkit=11.8.0\npip install nvidia-cudnn-cu11==8.6.0.163\n\nmkdir -p ${CONDA_PREFIX}/etc/conda/activate.d\nD=${CONDA_PREFIX}/etc/conda/activate.d/env.sh\necho 'export PYTHONNOUSERSITE=1' &gt;&gt; $D\necho 'export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${CONDA_PREFIX}/lib' &gt;&gt; $D\necho 'export CUDNN_PATH=$(dirname $(python -c \"import nvidia.cudnn;print(nvidia.cudnn.__file__)\"))' &gt;&gt; $D\necho 'export LD_LIBRARY_PATH=$CONDA_PREFIX/lib/:$CUDNN_PATH/lib:$LD_LIBRARY_PATH' &gt;&gt; $D\n</code></pre>"},{"location":"Running/","title":"Running IGM","text":"<p>Once IGM is installed, it can be executed by entering the following command in a terminal:</p> <pre><code>igm_run +experiment=params\n</code></pre> <p>in a folder that contains the following sub-folders:</p> <pre><code>\u251c\u2500\u2500 experiment  # contains the parameter file\n\u2502   \u2514\u2500\u2500 params.yaml\n\u251c\u2500\u2500 data        # contains the input data\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 user        # contains user-modules if any\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 output      # folder created by hydra/IGM to store model outputs\n\u2502   \u2514\u2500\u2500 ....\n</code></pre> <p>where the parameter file <code>params.yaml</code> (example below) consists of: i) specifying a list of modules for inputs, processes, and outputs, and ii) defining a list of parameters that override the default values.</p> <p>```yaml params.yaml</p>"},{"location":"Running/#package-global","title":"@package global","text":"<p>core:  # core IGM parameter (looging, GPU, ...)   hardware:      gpu_info: False</p> <p>defaults: # declare the list of modules to be used   - override /input: [load_ncdf]   - override /modules: [smb_simple, iceflow, time, thk]   - override /output: [write_ncdf, plot2d]</p> <p>inputs:  # override parameters of input modules   load_ncdf:     input_file: data/input.nc</p> <p>processes: # override parameters of processes modules   time:     start: 1880.0     end: 2020.0     save: 5.0 </p> <p>outputs: # override parameters of output modules   plot2d:     live: true <code>`` Visit the</code>Module` section of this documentation to find out what modules are available, together with their parameters.</p>"},{"location":"about/FAQ/","title":"FAQ","text":""},{"location":"about/FAQ/#frequently-asked-questions-faq","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"about/FAQ/#ice-is-stuck-on-the-border-of-the-domain-no-fluxes-what-can-i-do","title":"Ice is stuck on the border of the domain (no fluxes), what can I do?","text":"<p>Set the parameter <code>exclude_borders_from_iceflow</code> to <code>True</code>.</p>"},{"location":"about/FAQ/#i-see-some-numerical-artifacts-eg-waves-occurring-when-modeling-glacier-evolution-what-can-i-do","title":"I see some numerical artifacts (e.g., waves) occurring when modeling glacier evolution, what can I do?","text":"<p>Reduce the <code>CFL</code> parameter.</p>"},{"location":"about/FAQ/#how-to-createmodify-netcdf-files","title":"How to create/modify NetCDF files?","text":"<p>There are many ways to prepare NetCDF files (e.g., MATLAB, Python, GIS tools). The NCO toolkit allows easy operations via command lines, for example:</p> <pre><code>ncks -x -v thk file.nc file.nc              # Removes the variable 'thk' from file.nc\nncks -v usurf file.nc file.nc               # Extracts the variable 'usurf' from file.nc\nncap2 -h -O -s 'thk=0*thk' file.nc file.nc  # Performs operations on file.nc, here forcing zero 'thk'\nncrename -v apc,strflowctrl file.nc         # Renames variable 'apc' to 'strflowctrl' in file.nc\n</code></pre>"},{"location":"about/FAQ/#oggm-shop-produces-an-error-on-windows","title":"OGGM Shop produces an error on Windows","text":"<p>This is expected, as OGGM is not supported on Windows. However, modifying the <code>tarfile.py</code> file at line 2677 from <code>name == member_name</code> to <code>name.replace(os.sep, '/') == member_name</code> seems to fix the issue on Windows. Thanks to Alexi Morin for proposing this workaround.</p>"},{"location":"about/FAQ/#gpu-vs-cpu","title":"GPU vs CPU","text":"<p>IGM works fine on CPUs for small computational domains (typically individual glaciers). In contrast, GPUs are highly advantageous for very large computational grids (e.g., large networks of glaciers), as IGM naturally benefits from parallelism. See this example.</p>"},{"location":"about/credits_and_references/","title":"References","text":"<p>There is currently an in-progress IGM technical paper that will give you an overview of the physical components, modules, and capabilities of IGM.</p> <p>If you use IGM in publications, make sure to cite one of the following papers and the code version you used.</p> <p><pre><code>@article{IGM,\n    author       = \"Jouvet, Guillaume and Cordonnier, Guillaume and Kim, Byungsoo and L\u00fcthi, Martin and Vieli, Andreas and Aschwanden, Andy\",  \n    title        = \"Deep learning speeds up ice flow modelling by several orders of magnitude\",\n    DOI          = \"10.1017/jog.2021.120\",\n    journal      = \"Journal of Glaciology\",\n    year         =  2021,\n    pages        = \"1\u201314\",\n    publisher    = \"Cambridge University Press\"\n}\n</code></pre> <pre><code>@article{IGM-inv,\n    author       = \"Jouvet, Guillaume\",\n    title        = \"Inversion of a Stokes ice flow model emulated by deep learning\",\n    DOI          = \"10.1017/jog.2022.41\",\n    journal      = \"Journal of Glaciology\",\n    year         = \"2022\",\n    pages        = \"1--14\",\n    publisher    = \"Cambridge University Press\"\n}\n</code></pre> <pre><code>@article{IGM-PINN,\n    title={Ice-flow model emulator based on physics-informed deep learning},\n    author={Jouvet, Guillaume and Cordonnier, Guillaume},\n    journal={Journal of Glaciology},\n    pages={1--15},\n    year={2023},\n    publisher={Cambridge University Press},\n    doi={10.1017/jog.2023.73}\n}\n</code></pre></p>"},{"location":"about/credits_and_references/#acknowledgements","title":"Acknowledgements","text":"<p>I greatly thank Guillaume Cordonnier for his valuable help with the TensorFlow implementation. The Parallel Ice Sheet Model has greatly inspired the naming of variables, as well as the format of input and output NetCDF files.</p>"},{"location":"about/help/","title":"Need Help?","text":""},{"location":"about/help/#discord-chat-server","title":"Discord Chat Server","text":"<p>For any IGM-related questions, feel free to connect with the community on the Discord channel. To gain access, send an email request to guillaume.jouvet@unil.ch.</p>"},{"location":"about/help/#support-guidelines","title":"Support Guidelines","text":"<p>If you require assistance or feedback from developers or other users, and you are encountering an issue, it is essential to share a fully reproducible and well-organized setup folder. This will streamline communication and save time. Please provide a download link or even better an access to a github repository with a setup folder structured as follows:</p> <ul> <li>A sub-folder (e.g., <code>experiment</code>) containing the parameter file.</li> <li>A sub-folder (e.g., <code>data</code>) containing the input data (if applicable).</li> <li>A sub-folder (e.g., <code>user</code>) containing user modules (if applicable).</li> <li>A README file that includes:</li> <li>The exact version of IGM (tag or version to check out).</li> <li>The command to run to reproduce the error (e.g., <code>igm_run experiment=params</code>).</li> <li>A clear description of the issue.</li> <li>(Optional) The version of external libraries, if relevant (e.g., TensorFlow, xarray, etc.).</li> </ul>"},{"location":"about/transition-IGM-2-to-3/","title":"Transitioning IGM from v2 to v3: Guideline","text":""},{"location":"about/transition-IGM-2-to-3/#in-short","title":"In short","text":"<p>This is a major structural update, and we are starting a new versioning series with IGM 3.0.0. Below are the main changes and improvements you can expect:</p> <ul> <li> <p>Hydra integration (game changer!): The most important update is the integration of the Hydra library for handling parameters. This allows you to run large multi-ensemble simulations (poss on multiple GPUs) from a single command line, with full traceability and reproducibility. No more manually managing complex parameter files\u2014Hydra does it for you, and does it extremely well. This alone is a compelling reason to switch to IGM3!</p> </li> <li> <p>YAML-based parameters with hierarchical structure: All parameters are now defined in YAML (instead of JSON), offering a more powerful and flexible configuration format. Especially, parameters are now organized hierarchically, making it much easier to manage large configurations. This comes with renamed parameters, but don\u2019t worry\u2014we provide a tool to convert old JSON files to the new YAML format, along with a conversion table.</p> </li> <li> <p>New documentation website: A freshly built documentation website now automatically collects all parameter definitions, along with their default values, descriptions, and units.</p> </li> <li> <p>Clean folder structure: The working directory is now properly organized into subfolders for parameters, data, user modules, and output.</p> </li> <li> <p>Improved code readability: Key modules like iceflow and data_assimilation (formerly optimize) have been split into sub-files to improve readability, maintainability, and customization.</p> </li> </ul> <p>Here are the important new links:</p> <ul> <li> <p>The pre-release is on the usual https://github.com/jouvetg/igm , but you need to checkout the feature/hydra branch.</p> </li> <li> <p>The new documentation website is here : https://jouvetg.github.io/igm-doc/</p> </li> <li> <p>The separate repo containing examples : https://github.com/instructed-glacier-model/igm-examples</p> </li> <li> <p>The repo with the current technical paper re-shaped for IGM 3.0.0 : https://github.com/instructed-glacier-model/igm-paper</p> </li> </ul>"},{"location":"about/transition-IGM-2-to-3/#in-more-details-for-users","title":"In more details (for users)","text":""},{"location":"about/transition-IGM-2-to-3/#parameter-handling","title":"Parameter handling","text":""},{"location":"about/transition-IGM-2-to-3/#hydra-library-replaces-parser-and-yaml-file","title":"<code>hydra</code> library replaces <code>parser</code>, and YAML file","text":"<p>Parameters previously managed with the <code>parser</code> library are now handled using the <code>hydra</code> library. The parameter file, which was formerly a JSON file (<code>params.json</code>), has been transitioned to a YAML file (<code>experiment/params.yaml</code>) adhering to the YAML standard. This shift to <code>hydra</code> has significantly simplified the core IGM code. Running IGM now involves executing commands like:</p> <pre><code> igm_run +experiment=params \n</code></pre> <p>where parameters can be changed within the <code>params.yaml</code> file, or overridden directly in the command line. For example:</p> <pre><code>igm_run +experiment=params processes.time.start=1900 processes.time.end=2100\n</code></pre> <p>From a user perspective, migrating to IGM 3 essentially involves converting the former parameter file <code>params.json</code> into the new <code>experiment/params.yaml</code> format. To facilitate this transition, we provide a utility script named <code>json_to_yaml.py</code> (in the root of IGM repo) that automates the conversion process (you may have to adjust manually, check it afterwards!).</p>"},{"location":"about/transition-IGM-2-to-3/#parameter-naming-changes-and-hierarchical-construction","title":"Parameter Naming Changes, and hierarchical construction","text":"<p>Parameter names have been slightly modified. Previously, all parameters included a prefix like <code>iflo</code> to indicate they were associated with the <code>iceflow</code> module. Now, parameters are organized hierarchically by attributes, making the prefix redundant and therefore removed. For example: <code>time_start</code> is now accessible as <code>processes.time.start</code>.</p> <p>In the <code>iceflow</code> module, parameters have been significantly reorganized to follow a hierarchical structure. To assist with the transition, we provide a script named <code>json_to_yaml.py</code>, and correspondence table to help convert old JSON files into the new YAML format. Also, IGM now raises an error if a parameter contains a typo, and suggests parameters to pick.</p>"},{"location":"about/transition-IGM-2-to-3/#example-of-new-parameter-file","title":"Example of new parameter file","text":"<p>Here is what the new parameter file looks like:</p> <pre><code># @package _global_\n\ncore:\n  url_data: \"https://www.dropbox.com/scl/fo/8ixpy27i67s04bp7uixoq/h?rlkey=0ye7rd4zkcqfhvzx7suunw3bk&amp;dl=0\"\n\ndefaults:\n  - override /input: [load_ncdf]\n  - override /modules: [smb_simple, iceflow, time, thk]\n  - override /output: [write_ncdf, plot2d]\n\ninputs:\n  load_ncdf:\n    input_file: data/input.nc\n\nprocesses:\n  iceflow:\n    physics:\n      init_slidingco: 0.0595\n  time:\n    start: 1880.0\n    end: 2020.0\n    save: 5.0 \n\noutputs:\n  plot2d:\n    live: true\n</code></pre> <p>The above file will be read by Hydra in IGM and has the following structure:</p> <ul> <li><code>core</code>: Includes all parameters specific to the core IGM run, such as logging, downloading data prior to the run, GPU-related settings, etc.</li> <li><code>defaults</code>: Lists the input, process, and output modules to be used.</li> <li><code>inputs</code>: Contains parameters to override the defaults for input modules.</li> <li><code>processes</code>: Contains parameters to override the defaults for process modules.</li> <li><code>outputs</code>: Contains parameters to override the defaults for output modules.</li> </ul> <p>Note: The former module types <code>preprocess</code>, <code>process</code>, and <code>postprocess</code> have been renamed to <code>input</code>, <code>modules</code>, and <code>output</code>, respectively. </p>"},{"location":"about/transition-IGM-2-to-3/#running-multiple-runs","title":"Running multiple runs","text":"<p>A great advantage of Hydra is the possibility it provides for running ensemble simulations. For example, the following command sequentially runs two simulations with two different sets of parameters:</p> <pre><code>igm_run -m +experiment=params processes.time.end=2080,2110\n</code></pre> <p>Alternatively, if you supply two parameter files (<code>params1</code> and <code>params2</code>), you can execute:</p> <pre><code>igm_run -m +experiment=params1,params2\n</code></pre> <p>You can also perform a grid search over multiple parameters. For instance, the following command runs simulations for a 3x2 parameter grid:</p> <pre><code>igm_run -m +experiment=params processes.time.start=1900,1910,1920 processes.time.end=2080,2110\n</code></pre> <p>In such cases, the output folder will be named <code>multirun</code> instead of <code>output</code>.</p>"},{"location":"about/transition-IGM-2-to-3/#new-structure-of-working-folder","title":"New structure of working folder","text":"<p>The working folder is structured as follows:</p> <ul> <li><code>experiment</code>: Contains the parameter files.</li> <li><code>data</code>: Stores input data, if any.</li> <li><code>user</code>: Contains user-defined/custom Python functions or modules.</li> <li><code>output</code> or <code>multirun</code>: Contains the results of the IGM runs.</li> </ul> <p>The folder structure looks like this:</p> <pre><code>\u251c\u2500\u2500 experiment\n\u2502   \u2514\u2500\u2500 params.yaml\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 user\n\u2502   \u251c\u2500\u2500 code\n\u2502   \u2502   \u2514\u2500\u2500 processes\n\u2502   \u2502       \u2514\u2500\u2500 mymodule.py\n\u2502   \u2514\u2500\u2500 conf\n\u2502       \u2514\u2500\u2500 processes\n\u2502           \u2514\u2500\u2500 mymodule.yaml\n\u2514\u2500\u2500 output\n  \u251c\u2500\u2500 2025-03-06\n  \u2502   \u2514\u2500\u2500 15-43-37\n  \u2502   \u2514\u2500\u2500 15-44-07\n  \u2502       \u2514\u2500\u2500 output.nc\n  \u2502       \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"about/transition-IGM-2-to-3/#integration-and-exclusion-of-former-modules","title":"Integration and Exclusion of Former Modules","text":"<ul> <li> <p>Splitting of <code>iceflow</code> modules into <code>data_assimilation</code> and <code>pretraining</code>: The <code>iceflow</code> module has been split into two dedicated modules: <code>data_assimilation</code> (formerly <code>optimize</code>) and <code>pretraining</code>. This change was made to improve code organization and maintainability, as the <code>iceflow</code> module had grown too large. Previously, <code>data_assimilation</code> and <code>pretraining</code> were separate but had dependency issues with <code>iceflow</code>. With the new structure, both modules remain dependent on <code>iceflow</code>, but these dependencies are now handled seamlessly. When using <code>data_assimilation</code> or <code>pretraining</code>, ensure that the <code>iceflow</code> module is also included in your configuration. The order of inclusion does not matter.</p> </li> <li> <p>The modules <code>anim_mayavi</code>, <code>anim_plotly</code>, and <code>anim_video</code> have been externalized from IGM and moved to <code>utils</code>. These modules were purely for postprocessing and were executed at the very end. To simplify the core structure, they were externalized.</p> </li> <li> <p>Modules such as <code>print_comp</code> and <code>print_info</code> have been integrated into the core functionality of IGM.</p> </li> <li> <p>The <code>write_particles</code> functionality is now integrated into the <code>particule</code> module.</p> </li> </ul>"},{"location":"about/transition-IGM-2-to-3/#new-local-module-merging-netcdf-and-tif","title":"New <code>local</code> module merging netcdf and tif","text":"<p>A new I/O module, <code>local</code>, has been introduced to replace the <code>load_XXX</code> and <code>write_XXX</code> modules. The <code>local</code> module leverages the <code>xarray</code> library, which is more powerful and supports loading both NetCDF (<code>.nc</code>) and GeoTIFF (<code>.tif</code>) files.</p>"},{"location":"about/transition-IGM-2-to-3/#oggm_shop-requires-coupling-with-load_ncdf-or-local","title":"<code>oggm_shop</code> requires coupling with <code>load_ncdf</code> or <code>local</code>","text":"<p>The <code>oggm_shop</code> module now exclusively handles downloading data (e.g., RGIXXXX folders) using OGGM and converting it into a NetCDF file (<code>input.nc</code>) that adheres to IGM's naming conventions. However, it no longer performs the task of loading this data into IGM. To process the downloaded data, you must pair <code>oggm_shop</code> with either the <code>load_ncdf</code> or <code>local</code> modules. </p> <p>For example, if you use <code>oggm_shop</code>, you must include <code>load_ncdf</code> or <code>local</code> as additional <code>inputs</code> modules in your configuration.</p>"},{"location":"about/transition-IGM-2-to-3/#in-more-details-for-developpers","title":"In more details (for developpers)","text":""},{"location":"about/transition-IGM-2-to-3/#hierachical-and-separated-parameters-and-code","title":"Hierachical and separated parameters and code","text":"<p>In IGM source code, the parameters and the code are now hierarchically organized. Default parameters are stored in the <code>igm/igm/conf</code> folder, which is separate from the code located in the <code>igm/igm</code> folder. This separation ensures a clean organization of configuration files and source code. Parameters are grouped into logical categories and subcategories within the YAML files. This structure mirrors the organization of the modules and processes in IGM. For example, the folder structure for default parameters looks like this:</p> <pre><code>igm/igm/conf\n\u251c\u2500\u2500 inputs\n\u2502   \u2514\u2500\u2500 local.yaml\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 processes\n\u2502   \u2514\u2500\u2500 iceflow.yaml\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 outputs\n  \u2514\u2500\u2500 plot2d.yaml\n  \u2514\u2500\u2500 ...\n</code></pre> <p>In the code, all parameters are accessible through the object <code>cfg</code>. For example, <code>cfg.processes.enthalpy.ref_temp</code> refers to a parameter associated with the <code>enthalpy</code> processes module.</p> <p>On the other hand the structure for the code looks very similar:</p> <pre><code>igm/igm\n\u251c\u2500\u2500 inputs\n\u2502   \u2514\u2500\u2500 local\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 processes\n\u2502   \u2514\u2500\u2500 iceflow\n\u2502   \u2514\u2500\u2500 avalanche\n\u2514\u2500\u2500 outputs\n  \u2514\u2500\u2500 plot2d\n  \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"about/transition-IGM-2-to-3/#custom-modules-now-called-user","title":"Custom modules (now called \"user\")","text":"<p>User modules are very useful when customizing applications. They can be used to tailor input, process, or output methods. To create such a user module, you need to create (or update) the <code>user</code> folder located at the root of your working directory, ensuring the following hierarchy is respected:</p> <pre><code>\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 code\n    \u2502   \u2514\u2500\u2500 inputs \n    \u2502   \u2502   \u2514\u2500\u2500 my_inputs_module\n    \u2502   \u2502       \u2514\u2500\u2500 my_inputs_module.py \n    \u2502   \u2514\u2500\u2500 processes \n    \u2502   \u2502   \u2514\u2500\u2500 my_processes_module\n    \u2502   \u2502       \u2514\u2500\u2500 my_processes_module.py \n    \u2502   \u2514\u2500\u2500 outputs \n    \u2502       \u2514\u2500\u2500 my_outputs_module\n    \u2502           \u2514\u2500\u2500 my_outputs_module.py \n    \u2514\u2500\u2500 conf\n        \u2514\u2500\u2500 inputs\n            \u2514\u2500\u2500 my_inputs_module.yaml \n        \u2514\u2500\u2500 processes\n            \u2514\u2500\u2500 my_processes_module.yaml \n        \u2514\u2500\u2500 outputs\n            \u2514\u2500\u2500 my_outputs_module.yaml \n</code></pre> <p>where <code>my_processes_module.py</code> has the following structure (and require to define function <code>initialize</code>, <code>update</code>, and <code>finalize</code>):</p> <pre><code>def initialize(cfg,state):\n  ... \n\ndef update(cfg,state):\n  cfg.processes.clim_aletsch.time_resolution\n  ... \n\ndef finalize(cfg,state):\n  pass\n</code></pre> <p>Note that <code>my_inputs_module.py</code> and <code>my_outputs_module.py</code> only require function <code>run</code> (and <code>initialize</code> for output).</p> <p>Parameter files located in <code>conf/inputs</code>, <code>conf/processes</code>, and <code>conf/outputs</code> look like  <pre><code>update_freq: 1\ntime_resolution: 365\n</code></pre> or in case there is no parameter (the file must exist as follows even if no parameter are defined): <pre><code>null\n</code></pre></p> <p>It is important to note that user modules take precedence over official modules. If a user module shares the same name as an official module, the user module will override the official one, and the official module will be ignored.</p>"},{"location":"about/transition-IGM-2-to-3/#complex-modules-made-more-readables-and-more-customizable","title":"Complex modules made more readables, and more customizable","text":"<p>Key modules like <code>iceflow</code> and <code>data_assimilation</code> (formerly optimize) have been split into sub-files to improve readability, maintainability, and customization. Sometimes, you may need to modify an existing built-in module, e.g. to test a new feature in the iceflow emulator/solver, or new cost in the data assimilation. This can be achieved by creating a user module that overrides the built-in functionality. Check at the page on <code>user modules</code> in the documentation.</p>"},{"location":"about/transition-IGM-2-to-3/#parameter-changes","title":"Parameter changes","text":""},{"location":"about/transition-IGM-2-to-3/#parameter-name-change-table-for-iceflow-module","title":"Parameter name change table for <code>iceflow</code> module","text":"Formerly New name iflo_type iceflow.method iflo_force_max_velbar iceflow.force_max_velbar iflo_gravity_cst iceflow.physics.gravity_cst iflo_ice_density iceflow.physics.ice_density iflo_init_slidingco iceflow.physics.init_slidingco iflo_init_arrhenius iceflow.physics.init_arrhenius iflo_enhancement_factor iceflow.physics.enhancement_factor iflo_exp_glen iceflow.physics.exp_glen iflo_exp_weertman iceflow.physics.exp_weertman iflo_regu_glen iceflow.physics.regu_glen iflo_regu_weertman iceflow.physics.regu_weertman iflo_new_friction_param iceflow.physics.new_friction_param iflo_dim_arrhenius iceflow.physics.dim_arrhenius iflo_regu iceflow.physics.regu iflo_thr_ice_thk iceflow.physics.thr_ice_thk iflo_min_sr iceflow.physics.min_sr iflo_max_sr iceflow.physics.max_sr iflo_force_negative_gravitational_energy iceflow.physics.force_negative_gravitational_energy iflo_cf_eswn iceflow.physics.cf_eswn iflo_cf_cond iceflow.physics.cf_cond iflo_Nz iceflow.numerics.Nz iflo_vert_spacing iceflow.numerics.vert_spacing iflo_solve_step_size iceflow.solver.step_size iflo_solve_nbitmax iceflow.solver.nbitmax iflo_solve_stop_if_no_decrease iceflow.solver.stop_if_no_decrease iflo_optimizer_solver iceflow.solver.optimizer iflo_optimizer_lbfgs iceflow.solver.lbfgs iflo_save_cost_solver iceflow.solver.save_cost iflo_fieldin iceflow.emulator.fieldin iflo_retrain_emulator_freq iceflow.emulator.retrain_freq iflo_retrain_emulator_lr iceflow.emulator.lr iflo_retrain_emulator_lr_init iceflow.emulator.lr_init iflo_retrain_warm_up_it iceflow.emulator.warm_up_it iflo_retrain_emulator_nbit_init iceflow.emulator.nbit_init iflo_retrain_emulator_nbit iceflow.emulator.nbit iflo_retrain_emulator_framesizemax iceflow.emulator.framesizemax iflo_pretrained_emulator iceflow.emulator.pretrained iflo_emulator iceflow.emulator.name iflo_save_model iceflow.emulator.save_model iflo_exclude_borders iceflow.emulator.exclude_borders iflo_optimizer_emulator iceflow.emulator.optimizer iflo_optimizer_emulator_clipnorm iceflow.emulator.optimizer_clipnorm iflo_optimizer_emulator_epsilon iceflow.emulator.optimizer_epsilon iflo_save_cost_emulator iceflow.emulator.save_cost iflo_output_directory iceflow.emulator.output_directory iflo_network iceflow.emulator.network.architecture iflo_multiple_window_size iceflow.emulator.network.multiple_window_size iflo_activation iceflow.emulator.network.activation iflo_nb_layers iceflow.emulator.network.nb_layers iflo_nb_blocks iceflow.emulator.network.nb_blocks iflo_nb_out_filter iceflow.emulator.network.nb_out_filter iflo_conv_ker_size iceflow.emulator.network.conv_ker_size iflo_dropout_rate iceflow.emulator.network.dropout_rate iflo_weight_initialization iceflow.emulator.network.weight_initialization"},{"location":"about/transition-IGM-2-to-3/#parameter-name-change-table-for-optimize-data_assimilation-module","title":"Parameter name change table for <code>optimize</code> (<code>data_assimilation</code>) module","text":"Formerly New name opti_control data_assimilation.control_list opti_cost data_assimilation.cost_list opti_nbitmin data_assimilation.nbitmin opti_nbitmax data_assimilation.nbitmax opti_step_size data_assimilation.step_size opti_step_size_decay data_assimilation.step_size_decay opti_init_zero_thk data_assimilation.init_zero_thk opti_uniformize_thkobs data_assimilation.uniformize_thkobs opti_sole_mask data_assimilation.sole_mask opti_retrain_iceflow_model data_assimilation.retrain_iceflow_model opti_include_low_speed_term data_assimilation.include_low_speed_term opti_fix_opti_normalization_issue data_assimilation.fix_opti_normalization_issue opti_velsurfobs_thr data_assimilation.velsurfobs_thr opti_log_slidingco data_assimilation.log_slidingco opti_regu_param_thk data_assimilation.regularization.thk opti_regu_param_slidingco data_assimilation.regularization.slidingco opti_regu_param_arrhenius data_assimilation.regularization.arrhenius opti_regu_param_div data_assimilation.regularization.divflux opti_smooth_anisotropy_factor data_assimilation.regularization.smooth_anisotropy_factor opti_smooth_anisotropy_factor_sl data_assimilation.regularization.smooth_anisotropy_factor_sl opti_convexity_weight data_assimilation.regularization.convexity_weight opti_convexity_power data_assimilation.regularization.convexity_power opti_to_regularize data_assimilation.regularization.to_regularize opti_usurfobs_std data_assimilation.fitting.usurfobs_std opti_velsurfobs_std data_assimilation.fitting.velsurfobs_std opti_thkobs_std data_assimilation.fitting.thkobs_std opti_divfluxobs_std data_assimilation.fitting.divfluxobs_std opti_divflux_method data_assimilation.divflux.method opti_force_zero_sum_divflux data_assimilation.divflux.force_zero_sum opti_scaling_thk data_assimilation.scaling.thk opti_scaling_usurf data_assimilation.scaling.usurf opti_scaling_slidingco data_assimilation.scaling.slidingco opti_scaling_arrhenius data_assimilation.scaling.arrhenius opti_output_freq data_assimilation.output.freq opti_plot2d_live data_assimilation.output.plot2d_live opti_plot2d data_assimilation.output.plot2d opti_save_result_in_ncdf data_assimilation.output.save_result_in_ncdf opti_save_iterat_in_ncdf data_assimilation.output.save_iterat_in_ncdf opti_editor_plot2d data_assimilation.output.editor_plot2d opti_vars_to_save data_assimilation.output.vars_to_save opti_infer_params data_assimilation.cook.infer_params opti_tidewater_glacier data_assimilation.cook.tidewater_glacier opti_vol_std data_assimilation.cook.vol_std"},{"location":"about/variables/","title":"Variables","text":"<p>In general, IGM adopts name convention of PISM. Variable names serves to identify when outputing them, or in the code, they can be accessed (read and write) by <code>state.varname</code>. Here is a minimal list of key variables:</p> Variable names Shape Description Unit t () Time variable (scalar) y dt () Time step (scalar) y x,y (nx) Coordinates vectors m thk (ny) Ice thickness m topg (ny,nx) Basal topography (or bedrock) m usurf (ny,nx) Surface topography m smb (ny,nx) Surface Mass Balance m/y ice-eq ubar (ny,nx) x- depth-average velocity of ice m/y vbar (ny,nx) y- depth-average velocity of ice m/y U (nz,ny,nx) x-horiz. 3D velocity field of ice m/y V (nz,ny,nx) y-horiz. 3D velocity field of ice m/y W (nz,ny,nx) z-vert.  3D velocity field of ice m/y arrhenius (ny,nx) Arrhenius Factor \\(MPa^{-3} y^{-1}\\) slidingco (ny,nx) Sliding Coefficient \\(MPa m^{-1/3} y^{-1/3}\\) divflux (ny,nx) Divergence of the flux m/y icemask (ny,nx) Mask to restrict the smb comp. - dtopgdt (ny,nx) Erosion rate m/y xpos,ypos (nb particles) x,y position of particles m rhpos (nb particles) rel. pos of particles in ice column m air_temp (nt,ny,nx) seasonal air temperature 2 m above ground \\(\u00b0C\\) precipitation (nt,ny,nx) seasonal precipitation (water eq) \\(kg m^{-2} y^{-1}\\)"},{"location":"examples/Examples/","title":"Examples","text":"<p>Once IGM is installed, it is time to make your first runs. The best and quickest way to get to know IGM is to run given examples. For that, you may download dedicated IGM examples or run the <code>quick-demo</code> presented hereafter if you want to go faster.</p>"},{"location":"examples/Examples/#igm-examples","title":"IGM examples","text":"<p>Download the following repository that contains a gallery of ready-to-run setups (incl. parameter file, data, user modules if any), check at individual instructions:</p> <pre><code>git clone https://github.com/instructed-glacier-model/igm-examples\n</code></pre> <p>Then, you may simply run the command <code>igm_run +experiment=params</code> (or replace <code>params</code> with the actual name of your parameter file) in the corresponding folder to execute the example.</p>"},{"location":"examples/Examples/#quick-demo","title":"Quick demo","text":"<p>Copy and paste the following YAML parameter file (name it <code>params.yaml</code>), place it in a folder named <code>experiment</code>, and then run the command <code>igm_run +experiment=params</code>. This will model the Glacier with RGI ID <code>RGI60-11.01450</code> (the Great Aletsch Glacier, Switzerland) from 2020 to 2100, assuming a temperature increase of 4 degrees by 2100 relative to 1960\u20131990. </p> <p>The run will: 1. Use the <code>oggm_shop</code> module to download all necessary data via OGGM. 2. Execute a forward model combining the OGGM-based SMB model and the IGM-based ice flow model. 3. Write and plot the results in real time.</p> <p>Warning: This setup is provided as an example and has not been validated against historical data. It should not be interpreted as a scientifically accurate simulation. After running this example, you can explore different glaciers by selecting a different ID (refer to the GLIMS Viewer), modify parameters, or experiment with additional modules.</p> params.yaml<pre><code># @package _global_\n\ndefaults:\n  - override /inputs: \n    - oggm_shop\n    - local\n  - override /processes: \n    - clim_oggm\n    - smb_oggm\n    - iceflow\n    - time\n    - thk\n  - override /outputs: \n    - write_ncdf\n    - plot2d\n\ninputs:\n  oggm_shop:\n    RGI_ID: \"RGI60-11.01450\"\n    RGI_version: 6\n\nprocesses:\n  clim_oggm:\n    clim_trend_array: \n      - [\"time\", \"delta_temp\", \"prec_scal\"]\n      - [ 2020,           0.0,         1.0]\n      - [ 2100,           4.0,         1.0]\n  iceflow:\n    physics:\n      init_slidingco: 0.25\n  time:\n    start: 2200.0\n    end: 2100.0\n    save: 10.0\n\noutputs:\n  plot2d:\n    live: true\n</code></pre>"},{"location":"hydra/configuration/","title":"Hi config","text":""},{"location":"hydra/distributed_computing/","title":"Hi computing","text":""},{"location":"hydra/introduction/","title":"Hi intro","text":""},{"location":"installation/linux/","title":"Linux","text":"<ol> <li>Install NVIDIA drivers</li> </ol> <p>If you aim to use only the CPU or already get an output from <code>nvidia-smi</code>, you can skip this step.</p> <p><pre><code># get the latest libraries from apt\nsudo apt update\nsudo apt upgrade\n\n# choose which driver version is compatible with your GPU device (in this case 510)\nsudo apt install nvidia-driver-510 nvidia-dkms-510\nsudo reboot # you wont see the changes until after you reboot\n</code></pre> After rebooting, you can check your driver version with the command <code>watch -d -n 0.5 nvidia-smi</code> should give you live information on your GPU device.</p> <ol> <li>Install anaconda and create a virtual environment (strongly recommended) with conda or venv:</li> </ol> <pre><code># install anaconda\nwget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh\nbash Anaconda3-2023.09-0-Linux-x86_64.sh\n\n# create new environment\nconda create --name igm python=3.10\n\n# activate environment to install IGM\nconda activate igm\n</code></pre> <p>or</p> <pre><code># create igm venv environment\npython3.10 -m venv igm\n\n# activate environment to install IGM\nsource igm/bin/activate\n</code></pre> <ol> <li>Install IGM</li> </ol> <p>For simple usage, you can install the latest IGM stable version and its dependencies from the Pypi as follows:</p> <pre><code>pip install igm_model\n</code></pre> <p>OR for using all and recent features, you can install the IGM development version from the github repository as follows:</p> <pre><code>git clone https://github.com/jouvetg/igm.git\ncd igm\npip install -e .\n</code></pre> <p>After that, you may run any example (<code>igm_run</code>). As IGM is being updated often, make sure you have the latest version, you may run</p> <pre><code>git pull\n</code></pre>"},{"location":"installation/mac/","title":"Mac","text":"<p>IGM core library native Tensorflow is not supported on Mac for GPU usage. Instead, a \"Tensorflow for Mac\", called tensorflow-metal, was developed as workaround. To install IGM on Mac, you may follow the linux workflow, however, you will need to change in setup.py tensorflow by tensorflow-macos. Here is a working procedure (tested on MacBook Pro M2) -- still we recommend using a virtual environment such as conda or venv as on linux:</p> <p><pre><code>git clone -b develop https://github.com/jouvetg/igm\ncd igm\n</code></pre> You need to edit \"install_requires=[...]\" in the file \"setup.py\":</p> <ul> <li>To use only the CPUs: <code>tensorflow-macos==2.14.0</code></li> <li>To use the GPUs: <code>tensorflow-macos==2.14.0, tensorflow-metal,</code></li> </ul> <p>and then <pre><code>pip install -e .\n</code></pre></p>"},{"location":"installation/quick_start/","title":"Quick Start","text":"<p>This guide serves as the fastest way to install IGM. It assumes that have already</p> <ol> <li>Downloaded the nvidia drivers</li> <li>Have a working virtual environment</li> </ol> <p>If this is the case, you can skip to the next section.</p> <p>Note</p> <p>Tensorflow does not allow us to run IGM on GPU directly on Windows, and the module <code>oggm_shop</code> does not work on windows. Therefore, we recommend windows-user to install WSL2-ubuntu, which provides a linux/ubuntu terminal. WSL2 terminal can be nicely linked with VS code (with an extension). First, install WSL2-ubuntu</p> <pre><code>wsl --install Ubuntu-22.04\nsudo apt update\nsudo apt upgrade\n</code></pre>"},{"location":"installation/quick_start/#installing-methods","title":"Installing Methods","text":"<p>Once this is done, the options are the following</p> <ol> <li>pip</li> <li>github</li> <li>docker</li> </ol>"},{"location":"installation/quick_start/#pip","title":"Pip","text":"<p>To install the latest version of IGM, simply run</p> <pre><code>pip install igm_model\n</code></pre> <p>For reproducibility purposes, one might want to install a specific version of IGM. In order to do this, one can specify the version (note, this version must exist on the PyPI servers).</p> <pre><code>pip install igm_model=='2.2.2'\n</code></pre>"},{"location":"installation/quick_start/#github","title":"Github","text":"<p>If one wants to have the latest versions, or even, work on a specific hash for reproducibility, one can download IGM through the github repository. This is useful for developers, and researchers alike, who want to have the latest features as well as contribute to IGM's model personally.</p> <p>One can download the latest version of IGM with <code>git clone</code></p> <pre><code>git clone https://github.com/jouvetg/igm.git\n</code></pre> <p>Note</p> <p>IGM core library native Tensorflow is not supported on Mac for GPU usage. Instead, a \"Tensorflow for Mac\", called tensorflow-metal, was developed as workaround. To install IGM on Mac, you may follow the linux workflow, however, you will need to change in setup.py tensorflow by tensorflow-macos. Here is a working procedure (tested on MacBook Pro M2) -- still we recommend using a virtual environment such as conda or venv as on linux:</p> <p><pre><code>git clone -b develop https://github.com/jouvetg/igm\ncd igm\n</code></pre> You need to edit \"install_requires=[...]\" in the file \"setup.py\":</p> <ul> <li>To use only the CPUs: <code>tensorflow-macos==2.14.0</code></li> <li>To use the GPUs: <code>tensorflow-macos==2.14.0, tensorflow-metal,</code></li> </ul> <pre><code>cd igm\npip install -e .\n</code></pre> <p>After that, you may run any example (<code>igm_run</code>). As IGM is being updated often, make sure you have the latest version, you may run</p> <pre><code>git pull\n</code></pre>"},{"location":"installation/quick_start/#docker","title":"Docker","text":"<p>For even more granular control, one can opt to use the docker image instead of the github version. This maximizes the chances of reproducibility stability as the virtual environmnet is part of the installation of IGM. ... Assuming you have docker installed already, you can download the docker image through two ways</p> <ol> <li>Docker CLI</li> <li>DockerHub</li> </ol> <p>In order to download IGM through the commandline, you can run the following command</p> <pre><code>docker ...\n</code></pre>"},{"location":"installation/windows/","title":"Windows","text":"<p>Tensorflow does not allow us to run IGM on GPU directly on Windows, and the module <code>oggm_shop</code> does not work on windows. Therefore, we recommend windows-user to install WSL2-ubuntu, which provides a linux/ubuntu terminal. WSL2 terminal can be nicely linked with VS code (with an extension). First, install WSL2-ubuntu</p> <pre><code>wsl --install Ubuntu-22.04\nsudo apt update\nsudo apt upgrade\n</code></pre> <p>and then, install the NVIDIA drivers if not done (if you get no output from <code>nvidia-smi</code>), and if you wish to use the GPU.</p> <p>The rest -- installation of conda or venv environment and the installation of IGM -- are the same as above on Linux.</p>"},{"location":"installation/other/nvidia_drivers/","title":"Nvidia Drivers","text":"<p>If you aim to use only the CPU or already get an output from <code>nvidia-smi</code>, you can skip this step.</p> <p>! Give instructions for the driver version depending on the Tensorflow / GPU version</p> <p><pre><code># get the latest libraries from apt\nsudo apt update\nsudo apt upgrade\n\n# choose which driver version is compatible with your GPU device (in this case 510)\nsudo apt install nvidia-driver-510 nvidia-dkms-510\nsudo reboot # you wont see the changes until after you reboot\n</code></pre> After rebooting, you can check your driver version with the command <code>watch -d -n 0.5 nvidia-smi</code> should give you live information on your GPU device.</p> <p>! Give Photo</p>"},{"location":"installation/other/virtual_environment/","title":"Virtual Environments","text":"<p>Install anaconda and create a virtual environment (strongly recommended) with conda or venv:</p> <pre><code># install anaconda\nwget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh\nbash Anaconda3-2023.09-0-Linux-x86_64.sh\n\n# create new environment\nconda create --name igm python=3.10\n\n# activate environment to install IGM\nconda activate igm\n</code></pre> <p>or one can install a virtual environment without needing to use conda by using the <code>venv</code> module that is built-in to <code>python</code></p> <pre><code># create igm venv environment\npython3.10 -m venv igm\n\n# activate environment to install IGM\nsource igm/bin/activate\n</code></pre>"},{"location":"installation/other/wsl_windows/","title":"WSL Windows","text":"<pre><code>wsl --install Ubuntu-22.04\nsudo apt update\nsudo apt upgrade\n</code></pre> <p>and then, install the NVIDIA drivers if not done (if you get no output from <code>nvidia-smi</code>), and if you wish to use the GPU.</p> <p>The rest -- installation of conda or venv environment and the installation of IGM -- are the same as above on Linux.</p>"},{"location":"modules/core/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/core.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/core.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 69, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/core.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/introduction/","title":"Introduction","text":"<p>IGM is organized in a modular fashion, reflecting the similarity in tasks such as loading data, initializing fields, updating these fields within a time loop, and outputting results at regular intervals. Each module is designed to handle a specific aspect of the glacier evolution process, ensuring a clear and modular structure:</p> <ul> <li> <p>The <code>inputs</code> modules are responsible for loading data, such as glacier bedrock and ice surface velocities.</p> </li> <li> <p>The <code>processes</code> modules implement physical mechanisms in a modular way, such as ice flow and mass conservation.</p> </li> <li> <p>The <code>outputs</code> modules handle writing or visualizing model results.</p> </li> </ul> <p>The main Python script <code>igm_run</code> is responsible for orchestrating the entire simulation process. It loads all <code>inputs</code>, <code>processes</code>, and <code>outputs</code> modules along with their parameters, initializes them, updates them within a time loop, and finalizes them. The majority of the IGM code resides within these modules, while the core structure remains minimal and lightweight. Each module includes:</p> <ul> <li> <p>a name that is used to identify it (e.g., <code>greatmodule</code>).</p> </li> <li> <p>a source code located in <code>XXX/greatmodule/greatmodule.py</code>, where <code>XXX</code> is the folder <code>inputs</code>, <code>processes</code>, or <code>outputs</code> depending on the module's purpose.</p> </li> <li> <p>a parameter file located in <code>conf/XXX/greatmodule.yaml</code> containing default parameters.</p> </li> <li> <p>a help file located in <code>conf_help/XXX/greatmodule.yaml</code> that defines each parameter, including its type and unit.</p> </li> <li> <p>a documentation page in the <code>igm-doc</code> GitHub repository, which is used in the documentation.</p> </li> </ul> <p>For convenience, users can create their own module-parameter pairs in a dedicated <code>user</code> folder. These user-defined modules can be referenced directly from the parameter file, enabling customization and flexibility to extend the simulation's functionality. This approach allows users to tailor the simulation to their specific needs without altering the core modules. Check section on user modules for more information.</p>"},{"location":"modules/user_modules/","title":"User modules","text":"<p>It is easy to create your own module in a separate Python file and integrate it into the workflow. For instance, you might want to implement a climate or surface mass balance model tailored to a specific application. To achieve this, it is crucial to understand the structure and operation of IGM. User modules follow the same structure as built-in ones, so you can use built-in modules as a reference or starting point when designing your own.</p>"},{"location":"modules/user_modules/#coding-structure","title":"Coding structure","text":"<p>A closer look at the main script <code>igm_run.py</code> reveals the following structure:</p> <ul> <li><code>run</code> all inputs modules</li> <li><code>initialize</code> all processes modules</li> <li><code>initialize</code> all outputs modules</li> <li>For all time steps:</li> <li><code>update</code> all processes modules</li> <li><code>run</code> all outputs modules</li> <li><code>finalize</code> all processes modules</li> </ul> <p>Here, we find that - <code>inputs</code> modules have a <code>run</code> function, - <code>processes</code> modules have <code>initialize</code>, <code>update</code>, and <code>finalize</code> functions - <code>outputs</code> modules have <code>initialize</code> and <code>run</code> functions.</p> <p>Similarly to existing IGM modules, a user-defined module <code>my_module</code> can be implemented and automatically loaded when <code>igm_run</code> is executed, provided that <code>my_module</code> and the path to its parameter file are correctly specified. Building a user module involves creating the following folder structure (folder <code>user</code> lies alongside <code>experiment</code> and <code>data</code>):</p> <pre><code>\u2514\u2500\u2500 user\n  \u251c\u2500\u2500 code\n  \u2502   \u2514\u2500\u2500 input\n  \u2502   \u2502   \u2514\u2500\u2500 my_module.py\n  \u2502   \u2514\u2500\u2500 processes\n  \u2502   \u2502   \u2514\u2500\u2500 my_module.py\n  \u2502   \u2514\u2500\u2500 outputs\n  \u2502       \u2514\u2500\u2500 my_module.py\n  \u2514\u2500\u2500 conf\n    \u2514\u2500\u2500 input\n    \u2502   \u2514\u2500\u2500 my_module.yaml\n    \u2514\u2500\u2500 processes\n    \u2502   \u2514\u2500\u2500 my_module.yaml\n    \u2514\u2500\u2500 outputs\n      \u2514\u2500\u2500 my_module.yaml\n</code></pre> <p>Here, the code files are expected to define functions <code>run(cfg, state)</code>, <code>initialize(cfg, state)</code>, <code>update(cfg, state)</code>, and/or <code>finalize(cfg, state)</code>, where</p> <ul> <li> <p>the <code>cfg</code> object allows access to parameters in a hierachical fashion (e.g., <code>cfg.processes.enthalpy.ref_temp</code> retrieves a parameter associated with the <code>enthalpy</code> processes module),</p> </li> <li> <p>the <code>state</code> object provides access to variables describing the glacier state at a given time <code>t</code> (e.g., <code>state.thk</code> represents the distributed 2D ice thickness). All these variables are TensorFlow 2.0 Tensors. Leveraging TensorFlow is essential for performing computationally efficient operations, particularly on GPUs (see the dedicated TensorFlow section below). Variables can be accessed or modified using <code>state.name_of_the_variable</code>. Check at the section below to know more how to code in Tensorflow.</p> </li> </ul>"},{"location":"modules/user_modules/#example","title":"Example","text":"<p>To implement a mass balance function <code>sinus</code> with an oscillating ELA, you may create a module <code>mysmb</code> in a file <code>mysmb.py</code>:</p> <pre><code>def initialize(cfg,state):\n    pass\n\ndef update(cfg,state): \n    ELA = cfg.processes.mysmb.meanela + \\\n          750*math.sin((state.t/100)*math.pi) \n    state.smb  = state.usurf - ELA\n    state.smb *= tf.where(state.smb&lt;0, 0.005, 0.009)\n    state.smb  = tf.clip_by_value(state.smb, -100, 2) \n\ndef finalize(cfg,state):\n    pass\n</code></pre> <p>and a parameter file <code>mysmb.yaml</code> containing the default value:</p> <pre><code>mysmb:\n  meanela: 3200\n</code></pre> <p>Then, in the parameter file <code>params.yaml</code>, you need to:</p> <ol> <li>List the user module so that the code will be found.</li> <li>Include the parameter file so that its parameters are added to the existing ones.</li> </ol> <p>Here is an example of how to modify <code>params.yaml</code>:</p> <p><pre><code>defaults:\n\n  - /user/conf/processes@processes.mysmb: mysmb\n\n  - override /processes:  \n     - mysmb\n     - iceflow\n     - time\n     - thk \n  ...\n</code></pre> Note that the three functions (<code>initialize</code>, <code>update</code>, <code>finalize</code>) must be defined, even if some do not perform any operations (in such cases, simply use <code>pass</code>). For inspiration or examples, you can refer to the code of existing IGM modules.</p>"},{"location":"modules/user_modules/#overriding-a-module","title":"Overriding a module","text":"<p>Sometimes, you may need to modify an existing built-in module. This can be achieved by creating a user module that overrides the built-in functionality. To do this, define a module with the same name as the existing module (e.g., <code>existingmodule.py</code>) and implement the desired customizations. </p> <p>For example, the <code>aletsch-1880-2100</code> module implements a custom seeding strategy for the particle module. This is done by defining a user-specific <code>particles.py</code> file, which overrides the built-in functions. Here is an example:</p> <pre><code>#!/usr/bin/env python3\nimport igm \n\n# Take over the official functions\nupdate   = igm.processes.particles.particles.update\nfinalize = igm.processes.particles.particles.finalize\n\n# Define a new initialize function using the official one\ndef initialize(cfg, state):\n  igm.processes.particles.particles.initialize(cfg, state)\n  [...] # Load the custom seeding map\n\n# Customize the seeding_particles function\ndef seeding_particles(cfg, state):\n  [...] # Implement the custom seeding logic\n\n# Override the official seeding_particles function\nigm.processes.particles.particles.seeding_particles = seeding_particles\n</code></pre> <p>By following this approach, you can surgically extend or modify the behavior of existing modules while preserving the original functionality. This ensures flexibility and adaptability for specific use cases without compromising the integrity of the built-in modules.</p>"},{"location":"modules/user_modules/#tensorflow","title":"Tensorflow","text":"<p>IGM relies on the TensorFlow 2.0 library to achieve computational efficiency, particularly on GPUs. All variables, such as ice thickness, are represented as TensorFlow tensor objects. These tensors can only be modified using TensorFlow operations, which are inherently vectorized. This vectorization allows operations to be applied simultaneously across all entries of 2D gridded fields, enabling parallel and efficient execution.</p> <p>To maximize performance, avoid sequential operations, such as loops over indices of 2D arrays. Instead, leverage TensorFlow's optimized operations designed for large arrays, which are commonly used in machine learning and neural networks. By adhering to this approach, you can ensure that your computations remain efficient and fully utilize the capabilities of TensorFlow.</p> <p>At first glance, many TensorFlow functions resemble those in NumPy. For example, you can perform operations by replacing NumPy with TensorFlow, such as using <code>tf.zeros()</code> instead of <code>np.zeros()</code>. Additionally, you would import TensorFlow as <code>import tensorflow as tf</code> instead of <code>import numpy as np</code>. Here is an example of TensorFlow operations:</p> <pre><code>import tensorflow as tf\n\n# Create a tensor filled with zeros\ntensor = tf.zeros((500, 300))\n\n# Perform operations on the tensor\ntensor = (2 * tensor + 200) ** 2\n</code></pre> <p>While the syntax may appear similar, TensorFlow is specifically optimized for GPU acceleration and large-scale computations, making it more suitable for high-performance tasks compared to NumPy. This optimization allows TensorFlow to handle operations on large datasets efficiently, leveraging parallel processing capabilities of modern hardware.</p> <pre><code>state.topg  = tf.zeros_like(state.usurf)                                  # define Variable Tensor\nstate.smb   = tf.where(state.usurf &gt; 4000, 0, state.smb)                   # Imposes zero mass balance above 4000 m asl.\nstate.usurf = state.topg + state.thk                                       # Update surface topography with new ice thickness\nstate.smb   = tf.clip_by_value( (state.usurf - ela)*grad , -100, 2.0 )     # Define linear smb wrt z, with capping value\nu = tf.concat( [u[:, 0:1], 0.5 * (u[:, :-1] + u[:, 1:]), u[:, -1:]], 1 )   # work on straggered grid\n</code></pre> <p>In fact, there are two kinds of tensors used in IGM. The first type is the \"EagerTensor,\" which supports many operations but does not allow modification of specific tensor entries (slicing). For example:</p> <pre><code>tensor = tf.ones((500,300))  \ntensor = (2*tensor + 200)**2\ntensor[1,2] = 5 # WILL NOT WORK\n</code></pre> <p>As a workaround, you can use \"tf.Variable,\" which allows slicing. However, assignments must be performed using the <code>assign</code> function instead of the <code>=</code> operator:</p> <pre><code>tensor = tf.Variable(tf.ones((500, 300)))\ntensor.assign((2 * tensor + 200) ** 2)\ntensor[1, 2].assign(5)  # WORKS!\n</code></pre> <p>IGM combines both types of tensors, so it is essential to identify the type of tensor you are working with. Otherwise, TensorFlow will produce an error.</p> <p>For optimal computational efficiency, it is crucial to keep all variables and operations within the TensorFlow framework and avoid using NumPy. This prevents unnecessary data transfers between GPU and CPU memory. The best way to learn how to code with TensorFlow in the context of IGM is to explore the existing IGM module code.</p>"},{"location":"modules/user_modules/#sharing-your-module","title":"Sharing your module","text":"<p>If you have developed a module that you believe could benefit the community and be included in the IGM package, please reach out to the IGM development team. </p>"},{"location":"modules/inputs/load_ncdf/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/inputs/load_ncdf.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/inputs/load_ncdf.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 37, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/inputs/load_ncdf.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/inputs/load_tif/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/inputs/load_tif.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/inputs/load_tif.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 33, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/inputs/load_tif.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/inputs/local/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/inputs/local.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/inputs/local.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 65, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/inputs/local.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/inputs/oggm_shop/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/inputs/oggm_shop.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/inputs/oggm_shop.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 62, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/inputs/oggm_shop.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/outputs/local/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/outputs/local.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/outputs/local.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 27, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/outputs/local.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/outputs/plot2d/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/outputs/plot2d.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/outputs/plot2d.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 22, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/outputs/plot2d.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/outputs/write_ncdf/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/outputs/write_ncdf.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/outputs/write_ncdf.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 25, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/outputs/write_ncdf.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/outputs/write_tif/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/outputs/write_tif.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/outputs/write_tif.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 20, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/outputs/write_tif.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/outputs/write_ts/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/outputs/write_ts.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/outputs/write_ts.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 14, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/outputs/write_ts.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/avalanche/","title":"Module <code>avalanche</code>","text":"<p>This IGM module simulates the redistribution of snow and ice due to gravitational avalanches. The model assumes that when the local surface slope exceeds a specified threshold (angle of repose), mass is redistributed toward lower elevations until the surface slope is reduced below this threshold.</p> <p>Contributors: This function was adapted from Mark Kessler's GC2D program and implemented in IGM by J\u00fcrgen Mey with support from Guillaume Jouvet.</p>"},{"location":"modules/processes/avalanche/#config-structure","title":"Config Structure","text":"<pre><code>avalanche:\n  update_freq: 1\n  angleOfRepose: 30.0\n</code></pre>"},{"location":"modules/processes/avalanche/#parameters","title":"Parameters","text":"Name Type Units Description Default Value update_freq float y Frequency at which to update the avalanche module 1 angleOfRepose float Degrees Angle of repose (threshold for avalanche initiation) 30.0"},{"location":"modules/processes/avalanche/#example-usage","title":"Example Usage","text":"<p>We can run a simulation with a higher frequency of avalanches by changing the <code>processes.avalanche.update_freq</code> argument. We can either do this in our config file.</p> <pre><code># @package _global_\n\ninputs:\n  load_ncdf:\n    input_file: data/input.nc\n\nprocesses:\n  smb_simple:\n    array:\n      - [\"time\", \"gradabl\", \"gradacc\", \"ela\", \"accmax\"]\n      - [1900, 0.009, 0.005, 2800, 2.0]\n      - [2000, 0.009, 0.005, 2900, 2.0]\n      - [2100, 0.009, 0.005, 3300, 2.0]\n  time:\n    start: 1900.0\n    end: 2000.0\n    save: 10.0\n  avalanche:\n      update_freq: 5 # every 5 years\n</code></pre> <p>Alternatively, we can do it over the command line</p> <pre><code>igm_run +experiment/params processes.avalanche.update_freq=5\n</code></pre>"},{"location":"modules/processes/clim_glacialindex/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/clim_glacialindex.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/clim_glacialindex.yaml\", line 7, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 42, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/clim_glacialindex.yaml\", line 7, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/clim_oggm/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/clim_oggm.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/clim_oggm.yaml\", line 7, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 35, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/clim_oggm.yaml\", line 7, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/data_assimilation/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/data_assimilation.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/data_assimilation.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 223, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/data_assimilation.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/enthalpy/","title":"Module <code>enthalpy</code>","text":"<p>Warning: this rather complex module was not much tested so far, use it with care!</p>"},{"location":"modules/processes/enthalpy/#description","title":"Description:","text":"<p>This IGM module models the ice enthalpy, which permits to jointly model the ice temperature, as well as the water content created when the temperature hits the pressure melting points, and therefore energy conservation, which is not the case when modelling the sole temperature variable. The model is described in (Aschwanden and al, JOG, 2012). Check at the IGM technical paper for further details [1].</p> <p>[1] Concepts and capabilities of the Instructed Glacier Model 3.X.X, Jouvet and al.</p> <p>The enthalpy module builds upon the <code>iceflow</code> module. To ensure proper functionality, follow these requirements:</p> <ul> <li>Activate the <code>vertical_iceflow</code> module to provide the vertical velocity.</li> <li>Set <code>params.dim_arrhenius = 3</code>.</li> <li>Set <code>params.new_friction_param = true</code>.</li> <li>Ensure sufficient retraining by setting <code>retrain_iceflow_emulator_freq = 1</code>. Optionally, set <code>retrain_iceflow_emulator_nbit</code> to a value greater than 1 for improved performance.</li> </ul> <p>Contributors: G. Jouvet</p> <p>This implementation is largely inspired from the one implemented in PISM. Other references that have helped are (Kleiner and al, TC, 2015) and (Wang and al, 2020).</p>"},{"location":"modules/processes/enthalpy/#config-structure","title":"Config Structure","text":"<pre><code>enthalpy:  \n  water_density: 1000.0\n  spy: 31556926.0\n  ki: 2.1\n  ci: 2009.0\n  Lh: 3.34e+5\n  KtdivKc: 1e-1\n  claus_clape: 7.9e-8\n  melt_temp: 273.15\n  ref_temp: 223.15\n  till_friction_angle: 30.0\n  till_friction_angle_bed_min: null\n  till_friction_angle_bed_max: null\n  till_friction_angle_phi_min: 15.0\n  till_friction_angle_phi_max: 45.0\n  uthreshold: 100.0\n  drain_rate: 0.001\n  till_wat_max: 2.0\n  drain_ice_column: True\n  default_bheatflx: 0.065\n  temperature_offset_air_to_ice: 0.0\n  tauc_min: 1.0e+5\n  tauc_max: 1.0e+10\n</code></pre>"},{"location":"modules/processes/enthalpy/#parameters","title":"Parameters","text":"Name Type Units Description Default Value water_density float \\( kg~m^{-3} \\) Constant of the Water density 1000.0 spy float \\( s y^{-1} \\) Number of seconds per years 31556926.0 ki float \\( W~m^{-1}~K^{-1} \\) Conductivity of cold ice (Aschwanden and al, JOG, 2012) 2.1 ci float \\( W~s~kg^{-1}~K^{-1} \\) Specific heat capacity of ice (Aschwanden and al, JOG, 2012) 2009.0 Lh float \\( W~s~kg^{-1} = E \\) Latent heat of fusion (Aschwanden and al, JOG, 2012) 334000.0 KtdivKc float \\( \\frac{Kt}{Kc} \\) Ratio of temp vs cold ice diffusivity (Aschwanden and al, JOG, 2012) 1e-1 claus_clape float \\( K~Pa^{-1} \\) Clausius-Clapeyron constant (Aschwanden and al, JOG, 2012) 7.9e-08 melt_temp float \\( K \\) Melting point at standard pressure (Aschwanden and al, JOG, 2012) 273.15 ref_temp float \\( K \\) Reference temperature (Aschwanden and al, JOG, 2012) 223.15 till_friction_angle float \\( \\circ \\) Till friction angle in the Mohr-Coulomb friction law 30.0 till_friction_angle_bed_min float \\( \\circ \\) Minimum till friction angle at the bed None till_friction_angle_bed_max float \\( \\circ \\) Maximum till friction angle at the bed None till_friction_angle_phi_min float \\( \\circ \\) Minimum till friction angle phi 15.0 till_friction_angle_phi_max float \\( \\circ \\) Maximum till friction angle phi 45.0 uthreshold float \\( \\frac{m}{y} \\) Threshold velocity 100.0 drain_rate float \\( \\frac{m}{y} \\) Drain rate at 1 mm/y (Bueler and Pelt, GMD, 2015) 0.001 till_wat_max float \\( m \\) Maximum water till thickness (Bueler and Pelt, GMD, 2015) 2.0 drain_ice_column float \\( m \\) Transform the water content beyond a threshold into water, drain it, and add it to basal melt rate True default_bheatflx float \\( W~m^{-2} \\) Geothermal heat flux 0.065 temperature_offset_air_to_ice float \\( K \\) Offset between the air temperature and the ice temperature 0.0 tauc_min float \\( Pa \\) Lower bound for tauc 100000.0 tauc_max float \\( Pa \\) Upper bound for tauc 10000000000.0 <p>Processes</p> <pre><code>avalanche\n</code></pre>"},{"location":"modules/processes/gflex/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/gflex.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/gflex.yaml\", line 15, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 24, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/gflex.yaml\", line 15, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/glerosion/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/glerosion.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/glerosion.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 21, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/glerosion.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/iceflow/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/iceflow.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/iceflow.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 147, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/iceflow.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/particles/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/particles.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/particles.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 49, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/particles.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/pretraining/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/pretraining.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/pretraining.yaml\", line 4, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 59, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/pretraining.yaml\", line 4, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/read_output/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/read_output.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/read_output.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 21, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/read_output.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/rockflow/","title":"Module <code>rockflow</code>","text":"<p>This module extends the ice flow beyond glaciated areas by assigning a constant speed and along-slope flow direction. It is designed to track rock-like particles (using the <code>particles</code> module) in both ice-free and ice-covered regions. Particles are either advected at a constant speed (controlled by the parameter <code>processes.rockflow.speed</code>) following the steepest gradient of the ice-free terrain in 2D or transported by ice flow in 3D.</p> <p>Contributors: G. Jouvet</p>"},{"location":"modules/processes/rockflow/#config-structure","title":"Config Structure","text":"<pre><code>rockflow:\n  flow_speed: 1.0\n</code></pre>"},{"location":"modules/processes/rockflow/#parameters","title":"Parameters","text":"Name Type Units Description Default Value flow_speed float m yr^{-1} Speed of rock flow along the slope 1.0"},{"location":"modules/processes/smb_accpdd/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/smb_accpdd.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/smb_accpdd.yaml\", line 7, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 43, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/smb_accpdd.yaml\", line 7, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/smb_oggm/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/smb_oggm.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/smb_oggm.yaml\", line 15, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 26, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/smb_oggm.yaml\", line 15, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/smb_simple/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/smb_simple.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/smb_simple.yaml\", line 7, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 50, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/smb_simple.yaml\", line 7, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/texture/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/texture.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/texture.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 20, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/texture.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/thk/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/thk.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/thk.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 24, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/thk.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/time/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/time.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/time.yaml\", line 15, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 36, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/time.yaml\", line 15, column 10 <pre><code>  ```\n</code></pre>"},{"location":"modules/processes/vert_flow/","title":"Macro Rendering Error","text":"<pre><code>  _File_: `modules/processes/vert_flow.md`\n\n  _ScannerError_: sequence entries are not allowed here\n</code></pre> <p>in \"igm/igm/conf_help/processes/vert_flow.yaml\", line 3, column 10</p> <pre><code>  ```\n  Traceback (most recent call last):\n</code></pre> <p>File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/mkdocs_macros/plugin.py\", line 688, in render     return md_template.render(**page_variables)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 1295, in render     self.environment.handle_exception()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/jinja2/environment.py\", line 942, in handle_exception     raise rewrite_traceback_stack(source=source)   File \"\", line 17, in top-level template code   File \"/media/gjouvet/storage/Dropbox/home/IGM/igm-doc/main.py\", line 7, in load_yaml     return yaml.safe_load(file)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 125, in safe_load     return load(stream, SafeLoader)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/init.py\", line 81, in load     return loader.get_single_data()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/constructor.py\", line 49, in get_single_data     node = self.get_single_node()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 36, in get_single_node     document = self.compose_document()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 55, in compose_document     node = self.compose_node(None, None)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 84, in compose_node     node = self.compose_mapping_node(anchor)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 133, in compose_mapping_node     item_value = self.compose_node(node, item_key)   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/composer.py\", line 64, in compose_node     if self.check_event(AliasEvent):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 98, in check_event     self.current_event = self.state()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/parser.py\", line 449, in parse_block_mapping_value     if not self.check_token(KeyToken, ValueToken, BlockEndToken):   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 116, in check_token     self.fetch_more_tokens()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 215, in fetch_more_tokens     return self.fetch_block_entry()   File \"/home/gjouvet/anaconda3/envs/igm/lib/python3.10/site-packages/yaml/scanner.py\", line 491, in fetch_block_entry     raise ScannerError(None, None, yaml.scanner.ScannerError: sequence entries are not allowed here   in \"igm/igm/conf_help/processes/vert_flow.yaml\", line 3, column 10 <pre><code>  ```\n</code></pre>"}]}